@import 'sprite_generated';

$sprite: map-get($icons, sprite) !default;
$baseFontSize: 16px !default;

// Gets an attribute from the sass map
@function sprite-attr($icon, $attr) {
    $newIcon: map-get($icons, $icon);
    @if $newIcon == null {
        @warn "Can't find an icon with the name #{$icon}";
    }
    @return map-get($newIcon, $attr);
}

@function icon-attr($icon) {
    $attr: (
        width: sprite-attr($icon, width),
        height: sprite-attr($icon, height),
        x: sprite-attr($icon, backgroundX),
        y: sprite-attr($icon, backgroundY)
    );

    @return $attr;
}

// Sets background image and size
%sprite {
    display: inline-block;
    background-image: url(map-get($sprite, svgPath));
    background-size: map-get($sprite, width) map-get($sprite, height);
}

// For use with the gulp sprite plugin
@mixin sprite($icon, $type: all) {
    @if $type == all {
        // Shares the backgrounds
        @extend %sprite;
    }

    $iconMap: icon-attr($icon);

    // Outputs dimensions
    @if $type == all or $type == size {
        width: map-get($iconMap, width);
        height: map-get($iconMap, height);
    }

    // Outputs background position
    @if $type == all or $type == bg {
        background-position: map-get($iconMap, x) map-get($iconMap, y);
    }

}

// Sets background image and size
%masked-sprite {
    display: inline-block;
    mask-image: url(map-get($sprite, svgPath));
    mask-size: map-get($sprite, width) map-get($sprite, height);
    background-color: #000;
}

// For use with the gulp sprite plugin
@mixin masked-sprite($icon, $type: all) {
    @if $type == all {
        // Shares the backgrounds
        @extend %masked-sprite;
    }

    $iconMap: icon-attr($icon);

    // Outputs dimensions
    @if $type == all or $type == size {
        width: map-get($iconMap, width);
        height: map-get($iconMap, height);
    }

    // Outputs background position
    @if $type == all or $type == bg {
        mask-position: map-get($iconMap, x) map-get($iconMap, y);
    }

}